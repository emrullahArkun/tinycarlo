from tinycarlo.map import Map
from tinycarlo.renderer import Renderer
from tinycarlo.helper import getenv

import numpy as np
import os
import sys
import cv2

# Params
position_numpy = sys.argv[1] if len(sys.argv) > 1 else None # provide the path to the numpy file with positions (e.g. generated by examples/benchmark_tinycar_net.py and saved in /tmp/positions_m0.npy for maneuver 0)
map_config = {
    "json_path": sys.argv[2] if len(sys.argv) > 2 else os.path.join(os.path.dirname(__file__), "maps/simple_layout.json"),
    "pixel_per_meter": int(sys.argv[3]) if len(sys.argv) > 3 else 450
}
map = Map(map_config)
bg_color = (255,255,255) if getenv("WHITE") else None
render_node_names = False
overview_pixel_per_meter = map_config["pixel_per_meter"] # change this to make overview image bigger or smaller
line_thickness = 2


renderer = Renderer(map, overview_pixel_per_meter=overview_pixel_per_meter, background_color=bg_color, line_thickness=line_thickness, node_names=render_node_names)
overview = renderer.render_overview()
if position_numpy:
    positions = np.load(position_numpy) * overview_pixel_per_meter
    for pos in positions:
        overview = cv2.circle(overview, (int(pos[0]), int(pos[1])), 1, (255, 0, 255), -1)

cv2.namedWindow("Overview", cv2.WINDOW_NORMAL | cv2.WINDOW_GUI_EXPANDED)
# Close the window with a key press
# https://github.com/opencv/opencv/issues/20822
cv2.imshow("Overview", overview)
cv2.waitKey(0)
cv2.destroyAllWindows()

